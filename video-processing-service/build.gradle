plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.analysis'
version = '1.0.0'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    
    // Database
    runtimeOnly 'com.h2database:h2' // 개발용, 운영시 PostgreSQL로 변경 가능
    runtimeOnly 'org.postgresql:postgresql'
    
    // YouTube API
    implementation 'com.google.apis:google-api-services-youtube:v3-rev20231012-2.0.0'
    implementation 'com.google.api-client:google-api-client:2.2.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
    
    // JavaCV for video processing and pHash
    implementation 'org.bytedeco:javacv:1.5.9'
    implementation 'org.bytedeco:opencv:4.8.1-1.5.9'
    implementation 'org.bytedeco:opencv-platform:4.8.1-1.5.9'
    implementation 'org.bytedeco:ffmpeg:6.0-1.5.9'
    implementation 'org.bytedeco:ffmpeg-platform:6.0-1.5.9'
    
    // HTTP Client
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    
    // Scheduling
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    
    // Logging
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    
    // Configuration
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
}

tasks.named('test') {
    useJUnitPlatform()
}
